plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt)
    alias(libs.plugins.kapt)
}

android {
    namespace 'com.nexxlabs.cartly'
    compileSdk 35

    defaultConfig {
        applicationId "com.nexxlabs.cartly"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        dataBinding true
        buildConfig = true
    }
}

kapt{
    correctErrorTypes = true
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Navigation Component
    implementation(libs.navigation.fragment)
    implementation(libs.navigation.ui)

// Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)

// Retrofit, Gson, OkHttp
    implementation(libs.retrofit)
    implementation(libs.retrofit.gson)
    implementation(libs.okhttp)
    implementation(libs.okhttp.logging)

// Coroutines
    implementation(libs.coroutines.core)
    implementation(libs.coroutines.android)

// Lifecycle ViewModel
    implementation(libs.lifecycle.viewmodel)
    implementation(libs.lifecycle.runtime)

// Timber
    implementation(libs.timber)

//    Datastore
    implementation(libs.datastore.core)
    implementation(libs.datastore.preferences)

}